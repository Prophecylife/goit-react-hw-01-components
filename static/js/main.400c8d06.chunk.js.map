{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","username","tag","location","avatar","followers","views","likes","class","src","alt","Statistics","title","stats","map","item","label","percentage","id","Friend","isOnline","name","width","FriendsList","friends","friend","TransactionHistory","transactions","transaction","type","amount","currency","User","className","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wsGAgDeA,EA9CC,SAAC,GAQV,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,IACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,MACAC,EACI,EADJA,MAEA,OACE,sBAAKC,MAAM,UAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qBAAKC,IAAKL,EAAQM,IAAKT,EAAW,UAAWO,MAAM,WACnD,mBAAGA,MAAM,OAAT,SAAiBP,IACjB,mBAAGO,MAAM,MAAT,SAAgBN,IAChB,mBAAGM,MAAM,WAAT,SAAqBL,OAGvB,qBAAIK,MAAM,QAAV,UACE,+BACE,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBH,OAE1B,+BACE,sBAAMG,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBF,OAE1B,+BACE,sBAAME,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,c,OC7BnB,SAASI,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC1C,OACE,0BAASL,MAAM,aAAf,UACGI,GAAS,oBAAIJ,MAAM,QAAV,SAAmBI,IAE7B,oBAAIJ,MAAM,YAAV,SACGK,EAAMC,KAAI,SAAAC,GAAI,OACb,qBAAIP,MAAM,OAAV,UACE,sBAAMA,MAAM,QAAZ,SAAqBO,EAAKC,QAC1B,sBAAMR,MAAM,aAAZ,SAA0BO,EAAKE,WAAa,QAFxBF,EAAKG,Y,WCStBC,EAhBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUhB,EAAmB,EAAnBA,OAAQiB,EAAW,EAAXA,KAClC,OACE,gCACE,sBAAMb,MAAM,SAAZ,SAAsBY,IACtB,qBAAKZ,MAAM,SAASC,IAAKL,EAAQM,IAAKW,EAAO,UAAWC,MAAM,OAC9D,mBAAGd,MAAM,OAAT,SAAiBa,QCJR,SAASE,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,OACE,6BACGA,EAAQV,KAAI,SAAAW,GAAM,OACjB,6BACE,cAAC,EAAD,CACEL,SAAUK,EAAOL,SACjBhB,OAAQqB,EAAOrB,OACfiB,KAAMI,EAAOJ,KACbH,GAAIO,EAAOP,MALNO,EAAOP,S,WCLT,SAASQ,EAAT,GAA+C,IAAjBC,EAAgB,EAAhBA,aAC3C,OACE,wBAAOnB,MAAM,sBAAb,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGmB,EAAab,KAAI,SAAAc,GAAW,OAC3B,+BACE,6BAAKA,EAAYC,OACjB,6BAAKD,EAAYE,SACjB,6BAAKF,EAAYG,aAHVH,EAAYV,Y,WCChB,SAASc,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CACEhC,SAAUiC,EAAKjC,SACfC,IAAKgC,EAAKhC,IACVC,SAAU+B,EAAK/B,SACfC,OAAQ8B,EAAK9B,OACbC,UAAW6B,EAAKrB,MAAMR,UACtBC,MAAO4B,EAAKrB,MAAMP,MAClBC,MAAO2B,EAAKrB,MAAMN,QAEpB,cAACI,EAAD,CAAYC,MAAM,eAAeC,MAAOA,IACxC,cAACU,EAAD,CAAaC,QAASA,IACtB,cAACE,EAAD,CAAoBC,aAAcA,IAZpC,OCdJQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACL,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.400c8d06.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Profile = ({\n  username,\n  tag,\n  location,\n  avatar,\n  followers,\n  views,\n  likes,\n}) => {\n  return (\n    <div class=\"profile\">\n      <div class=\"description\">\n        <img src={avatar} alt={username + ' avatar'} class=\"avatar\" />\n        <p class=\"name\">{username}</p>\n        <p class=\"tag\">{tag}</p>\n        <p class=\"location\">{location}</p>\n      </div>\n\n      <ul class=\"stats\">\n        <li>\n          <span class=\"label\">Followers</span>\n          <span class=\"quantity\">{followers}</span>\n        </li>\n        <li>\n          <span class=\"label\">Views</span>\n          <span class=\"quantity\">{views}</span>\n        </li>\n        <li>\n          <span class=\"label\">Likes</span>\n          <span class=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  likes: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section class=\"statistics\">\n      {title && <h2 class=\"title\">{title}</h2>}\n\n      <ul class=\"stat-list\">\n        {stats.map(item => (\n          <li class=\"item\" key={item.id}>\n            <span class=\"label\">{item.label}</span>\n            <span class=\"percentage\">{item.percentage + '%'}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  stats: PropTypes.array.isRequired,\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nconst Friend = ({ isOnline, avatar, name }) => {\n  return (\n    <div>\n      <span class=\"status\">{isOnline}</span>\n      <img class=\"avatar\" src={avatar} alt={name + ' avatar'} width=\"48\" />\n      <p class=\"name\">{name}</p>\n    </div>\n  );\n};\n\nFriend.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Friend;\n","import Friend from './FriendListItem';\nimport PropTypes from 'prop-types';\n\nexport default function FriendsList({ friends }) {\n  return (\n    <ul>\n      {friends.map(friend => (\n        <li key={friend.id}>\n          <Friend\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n            id={friend.id}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\n\nexport default function TransactionHistory({ transactions }) {\n  return (\n    <table class=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}</td>\n            <td>{transaction.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// Task 1 Profile\nimport Profile from './components/Profile/Profile';\nimport user from './data/user.json';\n\n// Task 2 Statistics\nimport Statistics from './components/Statistics/Statistics';\nimport stats from './data/data.json';\n\n// Task 3 Friends\nimport FriendsList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\n\n//  Task 4 Transactions\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nexport default function User() {\n  return (\n    <div className=\"App\">\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={stats} />\n      <FriendsList friends={friends} />\n      <TransactionHistory transactions={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport User from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <User />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}